package ai.architect.ui

import ai.architect.core.DeepSeekClient
import ai.architect.core.ToolRegistry
import ai.architect.tools.ToolResponse
import com.intellij.openapi.project.Project
import kotlinx.coroutines.*
import java.util.concurrent.atomic.AtomicBoolean

class ArchitectChatController(
    private val project: Project,
    private val onAppend: (String) -> Unit
) {
    private val scope = CoroutineScope(SupervisorJob() + Dispatchers.IO)
    private val client = DeepSeekClient(project)
    private val tools = ToolRegistry(project)
    private val busy = AtomicBoolean(false)

    fun sendUserMessage(text: String) {
        if (!busy.compareAndSet(false, true)) return
        scope.launch {
            try {
                val reply = client.chat(
                    userText = text,
                    toolSchemas = tools.schemas(),
                    systemPreamble = SYSTEM_PROMPT
                ) { toolName, jsonArgs ->
                    // –í—ã–∑–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
                    val res: ToolResponse = tools.call(toolName, jsonArgs)
                    res.json // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å JSON tool_result
                }

                onAppend("–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä: $reply")
                // –ê–≤—Ç–æ—ç—Å–∫–∞–ª–∞—Ü–∏—è –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –µ—Å–ª–∏ –º–æ–¥–µ–ª—å "–Ω–µ —É–≤–µ—Ä–µ–Ω–∞":
                if (client.lastWasUncertain(reply)) {
                    val auto = tools.call("web_search", """{"query":"$text","top_k":5}""")
                    onAppend("üîé –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ: ${auto.humanReadable}")
                }
            } catch (t: Throwable) {
                onAppend("–û—à–∏–±–∫–∞: ${t.message}")
            } finally {
                busy.set(false)
            }
        }
    }

    companion object {
        // –ó–¥–µ—Å—å —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ: –ø—Ä–∏ –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π web/MCP –ø–æ–∏—Å–∫
        private const val SYSTEM_PROMPT = """
      –¢—ã ‚Äî –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä. –í—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—à—å —Å –ø—Ä–æ–µ–∫—Ç–æ–º IDE.
      –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ç—Ä–µ–±—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (tool calling).
      –ï—Å–ª–∏ —Ç—ã –ù–ï —É–≤–µ—Ä–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ –∏–ª–∏ —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –æ—à–∏–±–∫–æ–π ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–∑–æ–≤–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç web_search
      –∏–ª–∏ MCP-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é, –∑–∞—Ç–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞–π —Å —É—á–µ—Ç–æ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.
      –°–æ–±–ª—é–¥–∞–π –ø–æ–ª–∏—Ç–∏–∫–∏ –≤–µ—Ç–≤–ª–µ–Ω–∏—è: –∫—Ä—É–ø–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ ‚Äî —á–µ—Ä–µ–∑ feature-–≤–µ—Ç–∫—É –∏ PR; –º–µ–ª–∫–∏–µ ‚Äî inline.
      –≠–∫–æ–Ω–æ–º—å —Ç–æ–∫–µ–Ω—ã: –Ω–µ —Ü–∏—Ç–∏—Ä—É–π –¥–ª–∏–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Ü–µ–ª–∏–∫–æ–º, –∏—Å–ø–æ–ª—å–∑—É–π –∫—Ä–∞—Ç–∫–∏–µ –≤—ã–∂–∏–º–∫–∏.
    """
    }
}
